<interface>

<include name="Common.xml"/>

<typemap method="in" type="lime::ALCContextWrapper*">  $1 = val_to_ALCContextWrapper($input);</typemap>

<typemap method="out" type="lime::ALCContextWrapper*">  $result = ALCContextWrapper_to_val($input);</typemap>

<typemap method="check" type="lime::ALCContextWrapper*">
  if ($1 == NULL) {
    val_throw (alloc_string ("ALCContextWrapper handle can't be null"));
    $return;
  }
</typemap>

<typemap method="in" type="lime::ALCContextWrapper_Nullable*">  $1 = val_to_ALCContextWrapper($input);</typemap>

<typemap method="out" type="lime::ALCContextWrapper_Nullable*">  $result = ALCContextWrapper_to_val($input);</typemap>

<typemap method="in" type="ALCdevice*">  $1 = val_to_ALCdevice($input);</typemap>

<typemap method="out" type="ALCdevice*">  $result = ALCdevice_to_val($input);</typemap>

<typemap method="check" type="ALCdevice*">
  if ($1 == NULL) {
    val_throw (alloc_string ("ALCdevice handle can't be null"));
    $return;
  }
</typemap>

<insert>
<![CDATA[
#include <audio/openal/OpenALBindings.h>

using namespace lime;

]]>
</insert>

</interface>