<?xml version="1.0" encoding="utf-8"?>
<extension>
	
	<log error="Lime ${lime} is not compatible with Haxe ${haxe} (version 3.2.0 or higher is required)" if="${haxe < 3.2.0}" />
	
	<set name="lime" />
	
	<haxedef name="native" if="native" />
	
	<haxedef name="howlerjs" if="html5" />
	<set name="howlerjs" if="html5" />
	
	<haxedef name="lime-html5" if="html5" />
	<haxedef name="lime-native" if="native" />
	<haxedef name="lime-cffi" if="native" />
	
	<haxedef name="lime-has-separate-gl-context" />
	
	<set name="angle" if="windows" />
	
	<haxedef name="no-typedarray-inline" if="cs" />
	<haxedef name="no-compilation" />
	
	<templatePath name="templates" />
	<sample path="samples" unless="openfl" />
	
	<haxelib name="hxnodejs" if="nodejs" />
	<haxelib name="format" if="java" />
	
	<target name="ps3" handler="lime-ps3" />
	<haxelib name="lime-ps3" if="ps3" />

	<target name="ps4" handler="lime-ps4" />
	<haxelib name="lime-ps4" if="ps4" />
	
	<target name="vita" handler="lime-vita" />
	<haxelib name="lime-vita" if="vita" />

	<target name="wiiu" handler="lime-wiiu" />
	<haxelib name="lime-wiiu" if="wiiu" />

	<target name="xbox1" handler="lime-xbox1" />
	<haxelib name="lime-xbox1" if="xbox1" />
	
	<target name="console-pc" handler="lime-console-pc" />
	<haxelib name="lime-console-pc" if="console-pc" />
	
	<section unless="display || lime-legacy">
		
		<section unless="lime-console">
			<ndll name="std" haxelib="hxcpp" if="cpp" unless="static_link" />
			<ndll name="regexp" haxelib="hxcpp" if="cpp" unless="static_link" />
			<ndll name="zlib" haxelib="hxcpp" if="cpp" unless="emscripten || ios || static_link || tvos" />
			<ndll name="lime" if="native" />
		</section>
		
		<dependency name="extension-api" path="dependencies/extension-api" if="android" />
		<dependency path="dependencies/howler.min.js" if="html5 howlerjs" />
		<dependency path="dependencies/pako.min.js" if="html5" />
		<dependency path="dependencies/webgl-debug.js" if="html5 webgl-debug" />
		<dependency path="dependencies/stats.min.js" if="html5 stats" />
		<dependency path="dependencies/angle/d3dcompiler_47.dll" if="windows angle" unless="static_link" />
		<dependency path="dependencies/angle/libegl.dll" if="windows angle" unless="static_link" />
		<dependency path="dependencies/angle/libglesv2.dll" if="windows angle" unless="static_link" />
		
		<haxedef name="native-trace" if="flash" unless="haxe-trace || haxetrace" />
		<haxedef name="MACOSX_DEPLOYMENT_TARGET" value="10.6" if="mac" unless="MACOSX_DEPLOYMENT_TARGET" />
		
		<architecture name="armv7" if="android" />
		
		<haxedef name="lime-cairo" unless="flash || html5" />
		<haxedef name="lime-curl" unless="lime-console || emscripten || flash || html5" />
		<haxedef name="lime-opengl" unless="lime-console || flash" />
		<haxedef name="lime-openal" unless="lime-console || static_link || flash || html5" />
		<haxedef name="lime-openal" if="emscripten" />	
		<haxedef name="no_typedarray_inline" />
		<haxedef name="unsafe" if="cs" unless="no_unsafe" />
		
		<!-- TODO: Fix inheritance with separate modules -->
		
		<set name="module-name" value="lime" unless="openfl" />
		<set name="module-name" value="openfl" if="openfl" />
		
		<setenv name="HAXE_STD_PATH" value="${HAXE_STD_PATH}" if="modular HAXE_STD_PATH" />
		
		<module name="${module-name}" if="html5 modular">
			
			<source path="${HAXE_STD_PATH}" package="js.html" />
			<source path="${HAXE_STD_PATH}" package="haxe.ds" exclude="haxe.ds.StringMap" />
			<source path="${HAXE_STD_PATH}" package="haxe.io" />
			
			<class name="haxe.CallStack" />
			<class name="haxe.Log" />
			<class name="haxe.Timer" />
			<!-- <class name="js.Boot" /> -->
			<class name="js.Browser" />
			<class name="js.Cookie" />
			<class name="js.Error" />
			<!-- <class name="js.Lib" /> -->
			<class name="js.Promise" />
			<class name="js.RegExp" />
			<class name="js.Selection" />
			<class name="js.XMLSocket" />
			<class name="EReg" />
			<class name="HxOverrides" />
			<class name="List" />
			<class name="Math" />
			<!-- <class name="Reflect" /> -->
			<!-- <class name="Std" /> -->
			<class name="StringBuf" />
			<class name="StringTools" />
			<!-- <class name="Type" /> -->
			
			<include type="haxe.ds._StringMap.StringMapIterator" />
			<include type="haxe.ds.TreeNode" />
			<include type="haxe.IMap" />
			<include type="haxe._Int64.___Int64" />
			<include type="haxe.StackItem" />
			<include type="js.html._CanvasElement.CanvasUtil" />
			<!-- <include type="js._Boot.HaxeError" /> -->
			<include type="_List.ListIterator" />
			
		</module>
		
		<module name="${module-name}" if="html5 modular">
			
			<source path="" package="lime" exclude="lime._backend.*|lime.project.*|lime.tools.*|lime.net.*|lime.graphics.console.*" />
			<source path="" package="lime" include="lime._backend.html5" />
			
			<class name="lime.net.HTTPRequest" />
			
			<include type="lime.app._Future.FutureWork" />
			<include type="lime.graphics.utils._ImageDataUtil.ImageDataView" />
			<include type="lime.system._ThreadPool.ThreadPoolMessageType" />
			<include type="lime.AssetLibrary" />
			
			<exclude type="lime.graphics.console.IndexBuffer" />
			<exclude type="lime.graphics.console.PointerUtil" />
			<exclude type="lime.graphics.console.Primitive" />
			<exclude type="lime.graphics.console.RenderState" />
			<exclude type="lime.graphics.console.Shader" />
			<exclude type="lime.graphics.console.Texture" />
			<exclude type="lime.graphics.console.TextureAddressMode" />
			<exclude type="lime.graphics.console.TextureData" />
			<exclude type="lime.graphics.console.TextureFilter" />
			<exclude type="lime.graphics.console.TextureFormat" />
			<exclude type="lime.graphics.console.VertexBuffer" />
			<exclude type="lime.graphics.console.VertexDecl" />
			<exclude type="lime.graphics.console.VertexOutput" />
			
		</module>
		
	</section>
	
	<haxelib name="hxcpp" if="setup" />
	<haxelib name="lime-samples" if="setup" />
	
	<include haxelib="lime-samples" if="create" />
	
	<section if="rebuild">
		
		<config:project>
			<rebuild fulldebug="true" />
		</config:project>
		
	</section>
	
</extension>
